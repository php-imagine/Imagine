var search_data = {
    'index': {
        'searchIndex': ["imagine","imagine\\draw","imagine\\effects","imagine\\exception","imagine\\filter","imagine\\filter\\advanced","imagine\\filter\\basic","imagine\\gd","imagine\\gmagick","imagine\\image","imagine\\image\\fill","imagine\\image\\fill\\gradient","imagine\\image\\histogram","imagine\\image\\point","imagine\\imagick","imagine\\test","imagine\\test\\constraint","imagine\\draw\\drawerinterface","imagine\\effects\\effectsinterface","imagine\\exception\\exception","imagine\\exception\\invalidargumentexception","imagine\\exception\\outofboundsexception","imagine\\exception\\runtimeexception","imagine\\filter\\advanced\\border","imagine\\filter\\advanced\\canvas","imagine\\filter\\advanced\\grayscale","imagine\\filter\\advanced\\onpixelbased","imagine\\filter\\advanced\\relativeresize","imagine\\filter\\basic\\applymask","imagine\\filter\\basic\\copy","imagine\\filter\\basic\\crop","imagine\\filter\\basic\\fill","imagine\\filter\\basic\\fliphorizontally","imagine\\filter\\basic\\flipvertically","imagine\\filter\\basic\\paste","imagine\\filter\\basic\\resize","imagine\\filter\\basic\\rotate","imagine\\filter\\basic\\save","imagine\\filter\\basic\\show","imagine\\filter\\basic\\strip","imagine\\filter\\basic\\thumbnail","imagine\\filter\\filterinterface","imagine\\filter\\imagineaware","imagine\\filter\\transformation","imagine\\gd\\drawer","imagine\\gd\\effects","imagine\\gd\\font","imagine\\gd\\image","imagine\\gd\\imagine","imagine\\gd\\layers","imagine\\gmagick\\drawer","imagine\\gmagick\\effects","imagine\\gmagick\\font","imagine\\gmagick\\image","imagine\\gmagick\\imagine","imagine\\gmagick\\layers","imagine\\image\\abstractfont","imagine\\image\\box","imagine\\image\\boxinterface","imagine\\image\\color","imagine\\image\\fill\\fillinterface","imagine\\image\\fill\\gradient\\horizontal","imagine\\image\\fill\\gradient\\linear","imagine\\image\\fill\\gradient\\vertical","imagine\\image\\fontinterface","imagine\\image\\histogram\\bucket","imagine\\image\\histogram\\range","imagine\\image\\imageinterface","imagine\\image\\imagineinterface","imagine\\image\\layersinterface","imagine\\image\\manipulatorinterface","imagine\\image\\point","imagine\\image\\pointinterface","imagine\\image\\point\\center","imagine\\imagick\\drawer","imagine\\imagick\\effects","imagine\\imagick\\font","imagine\\imagick\\image","imagine\\imagick\\imagine","imagine\\imagick\\layers","imagine\\test\\constraint\\isimageequal","imagine\\test\\imaginetestcase","imagine\\draw\\drawerinterface::arc","imagine\\draw\\drawerinterface::chord","imagine\\draw\\drawerinterface::ellipse","imagine\\draw\\drawerinterface::line","imagine\\draw\\drawerinterface::pieslice","imagine\\draw\\drawerinterface::dot","imagine\\draw\\drawerinterface::polygon","imagine\\draw\\drawerinterface::text","imagine\\effects\\effectsinterface::gamma","imagine\\effects\\effectsinterface::negative","imagine\\effects\\effectsinterface::grayscale","imagine\\effects\\effectsinterface::colorize","imagine\\filter\\advanced\\border::__construct","imagine\\filter\\advanced\\border::apply","imagine\\filter\\advanced\\canvas::__construct","imagine\\filter\\advanced\\canvas::apply","imagine\\filter\\advanced\\grayscale::__construct","imagine\\filter\\advanced\\onpixelbased::__construct","imagine\\filter\\advanced\\onpixelbased::apply","imagine\\filter\\advanced\\relativeresize::__construct","imagine\\filter\\advanced\\relativeresize::apply","imagine\\filter\\basic\\applymask::__construct","imagine\\filter\\basic\\applymask::apply","imagine\\filter\\basic\\copy::apply","imagine\\filter\\basic\\crop::__construct","imagine\\filter\\basic\\crop::apply","imagine\\filter\\basic\\fill::__construct","imagine\\filter\\basic\\fill::apply","imagine\\filter\\basic\\fliphorizontally::apply","imagine\\filter\\basic\\flipvertically::apply","imagine\\filter\\basic\\paste::__construct","imagine\\filter\\basic\\paste::apply","imagine\\filter\\basic\\resize::__construct","imagine\\filter\\basic\\resize::apply","imagine\\filter\\basic\\rotate::__construct","imagine\\filter\\basic\\rotate::apply","imagine\\filter\\basic\\save::__construct","imagine\\filter\\basic\\save::apply","imagine\\filter\\basic\\show::__construct","imagine\\filter\\basic\\show::apply","imagine\\filter\\basic\\strip::apply","imagine\\filter\\basic\\thumbnail::__construct","imagine\\filter\\basic\\thumbnail::apply","imagine\\filter\\filterinterface::apply","imagine\\filter\\imagineaware::setimagine","imagine\\filter\\imagineaware::getimagine","imagine\\filter\\transformation::__construct","imagine\\filter\\transformation::applyfilter","imagine\\filter\\transformation::apply","imagine\\filter\\transformation::copy","imagine\\filter\\transformation::crop","imagine\\filter\\transformation::fliphorizontally","imagine\\filter\\transformation::flipvertically","imagine\\filter\\transformation::strip","imagine\\filter\\transformation::paste","imagine\\filter\\transformation::applymask","imagine\\filter\\transformation::fill","imagine\\filter\\transformation::resize","imagine\\filter\\transformation::rotate","imagine\\filter\\transformation::save","imagine\\filter\\transformation::show","imagine\\filter\\transformation::thumbnail","imagine\\filter\\transformation::add","imagine\\gd\\drawer::__construct","imagine\\gd\\drawer::arc","imagine\\gd\\drawer::chord","imagine\\gd\\drawer::ellipse","imagine\\gd\\drawer::line","imagine\\gd\\drawer::pieslice","imagine\\gd\\drawer::dot","imagine\\gd\\drawer::polygon","imagine\\gd\\drawer::text","imagine\\gd\\effects::__construct","imagine\\gd\\effects::gamma","imagine\\gd\\effects::negative","imagine\\gd\\effects::grayscale","imagine\\gd\\effects::colorize","imagine\\gd\\font::box","imagine\\gd\\image::__construct","imagine\\gd\\image::__destruct","imagine\\gd\\image::copy","imagine\\gd\\image::crop","imagine\\gd\\image::paste","imagine\\gd\\image::resize","imagine\\gd\\image::rotate","imagine\\gd\\image::save","imagine\\gd\\image::show","imagine\\gd\\image::get","imagine\\gd\\image::__tostring","imagine\\gd\\image::fliphorizontally","imagine\\gd\\image::flipvertically","imagine\\gd\\image::strip","imagine\\gd\\image::thumbnail","imagine\\gd\\image::draw","imagine\\gd\\image::effects","imagine\\gd\\image::getsize","imagine\\gd\\image::applymask","imagine\\gd\\image::fill","imagine\\gd\\image::mask","imagine\\gd\\image::histogram","imagine\\gd\\image::getcolorat","imagine\\gd\\image::layers","imagine\\gd\\imagine::__construct","imagine\\gd\\imagine::create","imagine\\gd\\imagine::open","imagine\\gd\\imagine::load","imagine\\gd\\imagine::read","imagine\\gd\\imagine::font","imagine\\gd\\layers::__construct","imagine\\gd\\layers::merge","imagine\\gd\\layers::current","imagine\\gd\\layers::key","imagine\\gd\\layers::next","imagine\\gd\\layers::rewind","imagine\\gd\\layers::valid","imagine\\gd\\layers::count","imagine\\gmagick\\drawer::__construct","imagine\\gmagick\\drawer::arc","imagine\\gmagick\\drawer::chord","imagine\\gmagick\\drawer::ellipse","imagine\\gmagick\\drawer::line","imagine\\gmagick\\drawer::pieslice","imagine\\gmagick\\drawer::dot","imagine\\gmagick\\drawer::polygon","imagine\\gmagick\\drawer::text","imagine\\gmagick\\effects::__construct","imagine\\gmagick\\effects::gamma","imagine\\gmagick\\effects::negative","imagine\\gmagick\\effects::grayscale","imagine\\gmagick\\effects::colorize","imagine\\gmagick\\font::__construct","imagine\\gmagick\\font::box","imagine\\gmagick\\image::__construct","imagine\\gmagick\\image::__destruct","imagine\\gmagick\\image::copy","imagine\\gmagick\\image::crop","imagine\\gmagick\\image::fliphorizontally","imagine\\gmagick\\image::flipvertically","imagine\\gmagick\\image::strip","imagine\\gmagick\\image::paste","imagine\\gmagick\\image::resize","imagine\\gmagick\\image::rotate","imagine\\gmagick\\image::save","imagine\\gmagick\\image::show","imagine\\gmagick\\image::get","imagine\\gmagick\\image::__tostring","imagine\\gmagick\\image::thumbnail","imagine\\gmagick\\image::draw","imagine\\gmagick\\image::effects","imagine\\gmagick\\image::getsize","imagine\\gmagick\\image::applymask","imagine\\gmagick\\image::mask","imagine\\gmagick\\image::fill","imagine\\gmagick\\image::histogram","imagine\\gmagick\\image::getcolorat","imagine\\gmagick\\image::layers","imagine\\gmagick\\imagine::__construct","imagine\\gmagick\\imagine::open","imagine\\gmagick\\imagine::create","imagine\\gmagick\\imagine::load","imagine\\gmagick\\imagine::read","imagine\\gmagick\\imagine::font","imagine\\gmagick\\layers::__construct","imagine\\gmagick\\layers::merge","imagine\\gmagick\\layers::current","imagine\\gmagick\\layers::key","imagine\\gmagick\\layers::next","imagine\\gmagick\\layers::rewind","imagine\\gmagick\\layers::valid","imagine\\gmagick\\layers::count","imagine\\image\\abstractfont::__construct","imagine\\image\\abstractfont::getfile","imagine\\image\\abstractfont::getsize","imagine\\image\\abstractfont::getcolor","imagine\\image\\box::__construct","imagine\\image\\box::getwidth","imagine\\image\\box::getheight","imagine\\image\\box::scale","imagine\\image\\box::increase","imagine\\image\\box::contains","imagine\\image\\box::square","imagine\\image\\box::__tostring","imagine\\image\\box::widen","imagine\\image\\box::heighten","imagine\\image\\boxinterface::getheight","imagine\\image\\boxinterface::getwidth","imagine\\image\\boxinterface::scale","imagine\\image\\boxinterface::increase","imagine\\image\\boxinterface::contains","imagine\\image\\boxinterface::square","imagine\\image\\boxinterface::__tostring","imagine\\image\\boxinterface::widen","imagine\\image\\boxinterface::heighten","imagine\\image\\color::__construct","imagine\\image\\color::getred","imagine\\image\\color::getgreen","imagine\\image\\color::getblue","imagine\\image\\color::getalpha","imagine\\image\\color::dissolve","imagine\\image\\color::lighten","imagine\\image\\color::darken","imagine\\image\\color::__tostring","imagine\\image\\color::isopaque","imagine\\image\\fill\\fillinterface::getcolor","imagine\\image\\fill\\gradient\\horizontal::getdistance","imagine\\image\\fill\\gradient\\linear::__construct","imagine\\image\\fill\\gradient\\linear::getcolor","imagine\\image\\fill\\gradient\\linear::getstart","imagine\\image\\fill\\gradient\\linear::getend","imagine\\image\\fill\\gradient\\vertical::getdistance","imagine\\image\\fontinterface::getfile","imagine\\image\\fontinterface::getsize","imagine\\image\\fontinterface::getcolor","imagine\\image\\fontinterface::box","imagine\\image\\histogram\\bucket::__construct","imagine\\image\\histogram\\bucket::add","imagine\\image\\histogram\\bucket::count","imagine\\image\\histogram\\range::__construct","imagine\\image\\histogram\\range::contains","imagine\\image\\imageinterface::get","imagine\\image\\imageinterface::__tostring","imagine\\image\\imageinterface::draw","imagine\\image\\imageinterface::effects","imagine\\image\\imageinterface::getsize","imagine\\image\\imageinterface::mask","imagine\\image\\imageinterface::histogram","imagine\\image\\imageinterface::getcolorat","imagine\\image\\imageinterface::layers","imagine\\image\\imagineinterface::create","imagine\\image\\imagineinterface::open","imagine\\image\\imagineinterface::load","imagine\\image\\imagineinterface::read","imagine\\image\\imagineinterface::font","imagine\\image\\layersinterface::merge","imagine\\image\\manipulatorinterface::copy","imagine\\image\\manipulatorinterface::crop","imagine\\image\\manipulatorinterface::resize","imagine\\image\\manipulatorinterface::rotate","imagine\\image\\manipulatorinterface::paste","imagine\\image\\manipulatorinterface::save","imagine\\image\\manipulatorinterface::show","imagine\\image\\manipulatorinterface::fliphorizontally","imagine\\image\\manipulatorinterface::flipvertically","imagine\\image\\manipulatorinterface::strip","imagine\\image\\manipulatorinterface::thumbnail","imagine\\image\\manipulatorinterface::applymask","imagine\\image\\manipulatorinterface::fill","imagine\\image\\point::__construct","imagine\\image\\point::getx","imagine\\image\\point::gety","imagine\\image\\point::in","imagine\\image\\point::move","imagine\\image\\point::__tostring","imagine\\image\\pointinterface::getx","imagine\\image\\pointinterface::gety","imagine\\image\\pointinterface::in","imagine\\image\\pointinterface::move","imagine\\image\\pointinterface::__tostring","imagine\\image\\point\\center::__construct","imagine\\image\\point\\center::getx","imagine\\image\\point\\center::gety","imagine\\image\\point\\center::in","imagine\\image\\point\\center::move","imagine\\image\\point\\center::__tostring","imagine\\imagick\\drawer::__construct","imagine\\imagick\\drawer::arc","imagine\\imagick\\drawer::chord","imagine\\imagick\\drawer::ellipse","imagine\\imagick\\drawer::line","imagine\\imagick\\drawer::pieslice","imagine\\imagick\\drawer::dot","imagine\\imagick\\drawer::polygon","imagine\\imagick\\drawer::text","imagine\\imagick\\effects::__construct","imagine\\imagick\\effects::gamma","imagine\\imagick\\effects::negative","imagine\\imagick\\effects::grayscale","imagine\\imagick\\effects::colorize","imagine\\imagick\\font::__construct","imagine\\imagick\\font::box","imagine\\imagick\\image::__construct","imagine\\imagick\\image::__destruct","imagine\\imagick\\image::copy","imagine\\imagick\\image::crop","imagine\\imagick\\image::fliphorizontally","imagine\\imagick\\image::flipvertically","imagine\\imagick\\image::strip","imagine\\imagick\\image::paste","imagine\\imagick\\image::resize","imagine\\imagick\\image::rotate","imagine\\imagick\\image::save","imagine\\imagick\\image::show","imagine\\imagick\\image::get","imagine\\imagick\\image::__tostring","imagine\\imagick\\image::thumbnail","imagine\\imagick\\image::draw","imagine\\imagick\\image::effects","imagine\\imagick\\image::getsize","imagine\\imagick\\image::applymask","imagine\\imagick\\image::mask","imagine\\imagick\\image::fill","imagine\\imagick\\image::histogram","imagine\\imagick\\image::getcolorat","imagine\\imagick\\image::layers","imagine\\imagick\\imagine::__construct","imagine\\imagick\\imagine::open","imagine\\imagick\\imagine::create","imagine\\imagick\\imagine::load","imagine\\imagick\\imagine::read","imagine\\imagick\\imagine::font","imagine\\imagick\\layers::__construct","imagine\\imagick\\layers::merge","imagine\\imagick\\layers::current","imagine\\imagick\\layers::key","imagine\\imagick\\layers::next","imagine\\imagick\\layers::rewind","imagine\\imagick\\layers::valid","imagine\\imagick\\layers::count","imagine\\test\\constraint\\isimageequal::__construct","imagine\\test\\constraint\\isimageequal::evaluate","imagine\\test\\constraint\\isimageequal::tostring","imagine\\test\\imaginetestcase::assertimageequals"],
        'info': [["Imagine","","Imagine.html","","",3],["Imagine\\Draw","","Imagine\/Draw.html","","",3],["Imagine\\Effects","","Imagine\/Effects.html","","",3],["Imagine\\Exception","","Imagine\/Exception.html","","",3],["Imagine\\Filter","","Imagine\/Filter.html","","",3],["Imagine\\Filter\\Advanced","","Imagine\/Filter\/Advanced.html","","",3],["Imagine\\Filter\\Basic","","Imagine\/Filter\/Basic.html","","",3],["Imagine\\Gd","","Imagine\/Gd.html","","",3],["Imagine\\Gmagick","","Imagine\/Gmagick.html","","",3],["Imagine\\Image","","Imagine\/Image.html","","",3],["Imagine\\Image\\Fill","","Imagine\/Image\/Fill.html","","",3],["Imagine\\Image\\Fill\\Gradient","","Imagine\/Image\/Fill\/Gradient.html","","",3],["Imagine\\Image\\Histogram","","Imagine\/Image\/Histogram.html","","",3],["Imagine\\Image\\Point","","Imagine\/Image\/Point.html","","",3],["Imagine\\Imagick","","Imagine\/Imagick.html","","",3],["Imagine\\Test","","Imagine\/Test.html","","",3],["Imagine\\Test\\Constraint","","Imagine\/Test\/Constraint.html","","",3],["DrawerInterface","Imagine\\Draw","Imagine\/Draw\/DrawerInterface.html","","Interface for the drawer",1],["EffectsInterface","Imagine\\Effects","Imagine\/Effects\/EffectsInterface.html","","Interface for the effects",1],["Exception","Imagine\\Exception","Imagine\/Exception\/Exception.html","","Imagine-specific exception",1],["InvalidArgumentException","Imagine\\Exception","Imagine\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","Imagine-specific invalid argument exception",1],["OutOfBoundsException","Imagine\\Exception","Imagine\/Exception\/OutOfBoundsException.html"," < OutOfBoundsException","Imagine-specific out of bounds exception",1],["RuntimeException","Imagine\\Exception","Imagine\/Exception\/RuntimeException.html"," < RuntimeException","Imagine-specific runtime exception",1],["Border","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/Border.html","","A border filter",1],["Canvas","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/Canvas.html","","A canvas filter",1],["Grayscale","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/Grayscale.html"," < OnPixelBased","The Grayscale filter calculates the gray-value based",1],["OnPixelBased","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/OnPixelBased.html","","The OnPixelBased takes a callable, and for each pixel,",1],["RelativeResize","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/RelativeResize.html","","The RelativeResize filter allows images to be resized",1],["ApplyMask","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/ApplyMask.html","","An apply mask filter",1],["Copy","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Copy.html","","A copy filter",1],["Crop","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Crop.html","","A crop filter",1],["Fill","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Fill.html","","A fill filter",1],["FlipHorizontally","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/FlipHorizontally.html","","A \"flip horizontally\" filter",1],["FlipVertically","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/FlipVertically.html","","A \"flip vertically\" filter",1],["Paste","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Paste.html","","A paste filter",1],["Resize","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Resize.html","","A resize filter",1],["Rotate","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Rotate.html","","A rotate filter",1],["Save","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Save.html","","A save filter",1],["Show","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Show.html","","A show filter",1],["Strip","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Strip.html","","A strip filter",1],["Thumbnail","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Thumbnail.html","","A thumbnail filter",1],["FilterInterface","Imagine\\Filter","Imagine\/Filter\/FilterInterface.html","","Interface for imagine filters",1],["ImagineAware","Imagine\\Filter","Imagine\/Filter\/ImagineAware.html","","ImagineAware base class",1],["Transformation","Imagine\\Filter","Imagine\/Filter\/Transformation.html","","A transformation filter",1],["Drawer","Imagine\\Gd","Imagine\/Gd\/Drawer.html","","Drawer implementation using the GD library",1],["Effects","Imagine\\Gd","Imagine\/Gd\/Effects.html","","Effects implementation using the GD library",1],["Font","Imagine\\Gd","Imagine\/Gd\/Font.html"," < AbstractFont","Font implementation using the GD library",1],["Image","Imagine\\Gd","Imagine\/Gd\/Image.html","","Image implementation using the GD library",1],["Imagine","Imagine\\Gd","Imagine\/Gd\/Imagine.html","","Imagine implementation using the GD library",1],["Layers","Imagine\\Gd","Imagine\/Gd\/Layers.html","","",1],["Drawer","Imagine\\Gmagick","Imagine\/Gmagick\/Drawer.html","","Drawer implementation using the Gmagick PHP extension",1],["Effects","Imagine\\Gmagick","Imagine\/Gmagick\/Effects.html","","Effects implementation using the Gmagick PHP extension",1],["Font","Imagine\\Gmagick","Imagine\/Gmagick\/Font.html"," < AbstractFont","Font implementation using the Gmagick PHP extension",1],["Image","Imagine\\Gmagick","Imagine\/Gmagick\/Image.html","","Image implementation using the Gmagick PHP extension",1],["Imagine","Imagine\\Gmagick","Imagine\/Gmagick\/Imagine.html","","Imagine implementation using the Gmagick PHP extension",1],["Layers","Imagine\\Gmagick","Imagine\/Gmagick\/Layers.html","","",1],["AbstractFont","Imagine\\Image","Imagine\/Image\/AbstractFont.html","","Abstract font base class",1],["Box","Imagine\\Image","Imagine\/Image\/Box.html","","A box implementation",1],["BoxInterface","Imagine\\Image","Imagine\/Image\/BoxInterface.html","","Interface for a box",1],["Color","Imagine\\Image","Imagine\/Image\/Color.html","","The color class",1],["FillInterface","Imagine\\Image\\Fill","Imagine\/Image\/Fill\/FillInterface.html","","Interface for the fill",1],["Horizontal","Imagine\\Image\\Fill\\Gradient","Imagine\/Image\/Fill\/Gradient\/Horizontal.html"," < Linear","Horizontal gradient fill",1],["Linear","Imagine\\Image\\Fill\\Gradient","Imagine\/Image\/Fill\/Gradient\/Linear.html","","Linear gradient fill",1],["Vertical","Imagine\\Image\\Fill\\Gradient","Imagine\/Image\/Fill\/Gradient\/Vertical.html"," < Linear","Vertical gradient fill",1],["FontInterface","Imagine\\Image","Imagine\/Image\/FontInterface.html","","The font interface",1],["Bucket","Imagine\\Image\\Histogram","Imagine\/Image\/Histogram\/Bucket.html","","Bucket histogram",1],["Range","Imagine\\Image\\Histogram","Imagine\/Image\/Histogram\/Range.html","","Range histogram",1],["ImageInterface","Imagine\\Image","Imagine\/Image\/ImageInterface.html","","The image interface",1],["ImagineInterface","Imagine\\Image","Imagine\/Image\/ImagineInterface.html","","The imagine interface",1],["LayersInterface","Imagine\\Image","Imagine\/Image\/LayersInterface.html","","The layers interface",1],["ManipulatorInterface","Imagine\\Image","Imagine\/Image\/ManipulatorInterface.html","","The manipulator interface",1],["Point","Imagine\\Image","Imagine\/Image\/Point.html","","The point class",1],["PointInterface","Imagine\\Image","Imagine\/Image\/PointInterface.html","","The point interface",1],["Center","Imagine\\Image\\Point","Imagine\/Image\/Point\/Center.html","","Point center",1],["Drawer","Imagine\\Imagick","Imagine\/Imagick\/Drawer.html","","Drawer implementation using the Imagick PHP extension",1],["Effects","Imagine\\Imagick","Imagine\/Imagick\/Effects.html","","Effects implementation using the Imagick PHP extension",1],["Font","Imagine\\Imagick","Imagine\/Imagick\/Font.html"," < AbstractFont","Font implementation using the Imagick PHP extension",1],["Image","Imagine\\Imagick","Imagine\/Imagick\/Image.html","","Image implementation using the Imagick PHP extension",1],["Imagine","Imagine\\Imagick","Imagine\/Imagick\/Imagine.html","","Imagine implementation using the Imagick PHP extension",1],["Layers","Imagine\\Imagick","Imagine\/Imagick\/Layers.html","","",1],["IsImageEqual","Imagine\\Test\\Constraint","Imagine\/Test\/Constraint\/IsImageEqual.html"," < PHPUnit_Framework_Constraint","",1],["ImagineTestCase","Imagine\\Test","Imagine\/Test\/ImagineTestCase.html"," < PHPUnit_Framework_TestCase","",1],["DrawerInterface::arc","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["DrawerInterface::chord","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but also connects end points with a straight",2],["DrawerInterface::ellipse","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["DrawerInterface::line","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $outline, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["DrawerInterface::pieSlice","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["DrawerInterface::dot","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["DrawerInterface::polygon","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["DrawerInterface::text","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle)","Annotates image with specified text at a given position",2],["EffectsInterface::gamma","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_gamma","(<abbr title=\"Imagine\\Effects\\float\">float<\/abbr> $correction)","Apply gamma correction",2],["EffectsInterface::negative","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_negative","()","Invert the colors of the image",2],["EffectsInterface::grayscale","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_grayscale","()","Grayscale the image",2],["EffectsInterface::colorize","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_colorize","(<a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Colorize the image",2],["Border::__construct","Imagine\\Filter\\Advanced\\Border","Imagine\/Filter\/Advanced\/Border.html#method___construct","(<a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $width = 1, integer $height = 1)","Constructs Border filter with given color, width and",2],["Border::apply","Imagine\\Filter\\Advanced\\Border","Imagine\/Filter\/Advanced\/Border.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Canvas::__construct","Imagine\\Filter\\Advanced\\Canvas","Imagine\/Filter\/Advanced\/Canvas.html#method___construct","(<a href=\"Imagine\/Image\/ImagineInterface.html\"><abbr title=\"Imagine\\Image\\ImagineInterface\">ImagineInterface<\/abbr><\/a> $imagine, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $placement = null, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $background = null)","Constructs Canvas filter with given width and height",2],["Canvas::apply","Imagine\\Filter\\Advanced\\Canvas","Imagine\/Filter\/Advanced\/Canvas.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Grayscale::__construct","Imagine\\Filter\\Advanced\\Grayscale","Imagine\/Filter\/Advanced\/Grayscale.html#method___construct","()","",2],["OnPixelBased::__construct","Imagine\\Filter\\Advanced\\OnPixelBased","Imagine\/Filter\/Advanced\/OnPixelBased.html#method___construct","($callback)","",2],["OnPixelBased::apply","Imagine\\Filter\\Advanced\\OnPixelBased","Imagine\/Filter\/Advanced\/OnPixelBased.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["RelativeResize::__construct","Imagine\\Filter\\Advanced\\RelativeResize","Imagine\/Filter\/Advanced\/RelativeResize.html#method___construct","(string $method, mixed $parameter)","Constructs a RelativeResize filter with the given method",2],["RelativeResize::apply","Imagine\\Filter\\Advanced\\RelativeResize","Imagine\/Filter\/Advanced\/RelativeResize.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["ApplyMask::__construct","Imagine\\Filter\\Basic\\ApplyMask","Imagine\/Filter\/Basic\/ApplyMask.html#method___construct","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","",2],["ApplyMask::apply","Imagine\\Filter\\Basic\\ApplyMask","Imagine\/Filter\/Basic\/ApplyMask.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Copy::apply","Imagine\\Filter\\Basic\\Copy","Imagine\/Filter\/Basic\/Copy.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Crop::__construct","Imagine\\Filter\\Basic\\Crop","Imagine\/Filter\/Basic\/Crop.html#method___construct","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Constructs a Crop filter with given x, y, coordinates",2],["Crop::apply","Imagine\\Filter\\Basic\\Crop","Imagine\/Filter\/Basic\/Crop.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Fill::__construct","Imagine\\Filter\\Basic\\Fill","Imagine\/Filter\/Basic\/Fill.html#method___construct","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","",2],["Fill::apply","Imagine\\Filter\\Basic\\Fill","Imagine\/Filter\/Basic\/Fill.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["FlipHorizontally::apply","Imagine\\Filter\\Basic\\FlipHorizontally","Imagine\/Filter\/Basic\/FlipHorizontally.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["FlipVertically::apply","Imagine\\Filter\\Basic\\FlipVertically","Imagine\/Filter\/Basic\/FlipVertically.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Paste::__construct","Imagine\\Filter\\Basic\\Paste","Imagine\/Filter\/Basic\/Paste.html#method___construct","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Constructs a Paste filter with given ImageInterface",2],["Paste::apply","Imagine\\Filter\\Basic\\Paste","Imagine\/Filter\/Basic\/Paste.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Resize::__construct","Imagine\\Filter\\Basic\\Resize","Imagine\/Filter\/Basic\/Resize.html#method___construct","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Constructs Resize filter with given width and height",2],["Resize::apply","Imagine\\Filter\\Basic\\Resize","Imagine\/Filter\/Basic\/Resize.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Rotate::__construct","Imagine\\Filter\\Basic\\Rotate","Imagine\/Filter\/Basic\/Rotate.html#method___construct","(integer $angle, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $background = null)","Constructs Rotate filter with given angle and background",2],["Rotate::apply","Imagine\\Filter\\Basic\\Rotate","Imagine\/Filter\/Basic\/Rotate.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Save::__construct","Imagine\\Filter\\Basic\\Save","Imagine\/Filter\/Basic\/Save.html#method___construct","(string $path, array $options = array())","Constructs Save filter with given path and options",2],["Save::apply","Imagine\\Filter\\Basic\\Save","Imagine\/Filter\/Basic\/Save.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Show::__construct","Imagine\\Filter\\Basic\\Show","Imagine\/Filter\/Basic\/Show.html#method___construct","(string $format, array $options = array())","Constructs the Show filter with given format and options",2],["Show::apply","Imagine\\Filter\\Basic\\Show","Imagine\/Filter\/Basic\/Show.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Strip::apply","Imagine\\Filter\\Basic\\Strip","Imagine\/Filter\/Basic\/Strip.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Thumbnail::__construct","Imagine\\Filter\\Basic\\Thumbnail","Imagine\/Filter\/Basic\/Thumbnail.html#method___construct","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET)","Constructs the Thumbnail filter with given width, height",2],["Thumbnail::apply","Imagine\\Filter\\Basic\\Thumbnail","Imagine\/Filter\/Basic\/Thumbnail.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["FilterInterface::apply","Imagine\\Filter\\FilterInterface","Imagine\/Filter\/FilterInterface.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["ImagineAware::setImagine","Imagine\\Filter\\ImagineAware","Imagine\/Filter\/ImagineAware.html#method_setImagine","(<a href=\"Imagine\/Image\/ImagineInterface.html\"><abbr title=\"Imagine\\Image\\ImagineInterface\">ImagineInterface<\/abbr><\/a> $imagine)","Set ImagineInterface instance.",2],["ImagineAware::getImagine","Imagine\\Filter\\ImagineAware","Imagine\/Filter\/ImagineAware.html#method_getImagine","()","Get ImagineInterface instance.",2],["Transformation::__construct","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method___construct","(<a href=\"Imagine\/Image\/ImagineInterface.html\"><abbr title=\"Imagine\\Image\\ImagineInterface\">ImagineInterface<\/abbr><\/a> $imagine = null)","Class constructor.",2],["Transformation::applyFilter","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_applyFilter","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Filter\/FilterInterface.html\"><abbr title=\"Imagine\\Filter\\FilterInterface\">FilterInterface<\/abbr><\/a> $filter)","Applies a given FilterInterface onto given ImageInterface",2],["Transformation::apply","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Transformation::copy","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Transformation::crop","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Transformation::flipHorizontally","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Transformation::flipVertically","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_flipVertically","()","Flips current image using vertical axis",2],["Transformation::strip","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_strip","()","Remove all profiles and comments",2],["Transformation::paste","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Transformation::applyMask","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Transformation::fill","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Transformation::resize","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Resizes current image and returns self",2],["Transformation::rotate","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Transformation::save","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_save","(string $path, array $options = array())","Saves the image at a specified path, the target file",2],["Transformation::show","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Transformation::thumbnail","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET)","Generates a thumbnail from a current image Returns",2],["Transformation::add","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_add","(<a href=\"Imagine\/Filter\/FilterInterface.html\"><abbr title=\"Imagine\\Filter\\FilterInterface\">FilterInterface<\/abbr><\/a> $filter)","Registers a given FilterInterface in an internal array",2],["Drawer::__construct","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method___construct","(<abbr title=\"Imagine\\Gd\\resource\">resource<\/abbr> $resource)","Constructs Drawer with a given gd image resource",2],["Drawer::arc","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["Drawer::chord","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","This function doesn't work properly because of a bug",2],["Drawer::ellipse","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["Drawer::line","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["Drawer::pieSlice","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["Drawer::dot","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["Drawer::polygon","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["Drawer::text","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle)","Annotates image with specified text at a given position",2],["Effects::__construct","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method___construct","($resource)","",2],["Effects::gamma","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_gamma","(<abbr title=\"Imagine\\Effects\\float\">float<\/abbr> $correction)","Apply gamma correction",2],["Effects::negative","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_negative","()","Invert the colors of the image",2],["Effects::grayscale","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_grayscale","()","Grayscale the image",2],["Effects::colorize","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_colorize","(<a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Colorize the image",2],["Font::box","Imagine\\Gd\\Font","Imagine\/Gd\/Font.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Image::__construct","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method___construct","(<abbr title=\"Imagine\\Gd\\resource\">resource<\/abbr> $resource)","Constructs a new Image instance using the result of",2],["Image::__destruct","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method___destruct","()","Makes sure the current image resource is destroyed",2],["Image::copy","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Image::crop","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Image::paste","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Image::resize","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Resizes current image and returns self",2],["Image::rotate","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Image::save","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_save","(string $path, array $options = array())","Saves the image at a specified path, the target file",2],["Image::show","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Image::get","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["Image::__toString","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method___toString","()","Returns the image content as a PNG binary string",2],["Image::flipHorizontally","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Image::flipVertically","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_flipVertically","()","Flips current image using vertical axis",2],["Image::strip","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_strip","()","Remove all profiles and comments",2],["Image::thumbnail","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET)","Generates a thumbnail from a current image Returns",2],["Image::draw","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["Image::effects","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_effects","()","",2],["Image::getSize","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_getSize","()","Returns current image size",2],["Image::applyMask","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Image::fill","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Image::mask","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["Image::histogram","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Color",2],["Image::getColorAt","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["Image::layers","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_layers","()","Returns the image layers when applicable.",2],["Imagine::__construct","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method___construct","()","",2],["Imagine::create","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["Imagine::open","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_open","(string $path)","Opens an existing image from $path",2],["Imagine::load","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_load","(string $string)","Loads an image from a binary $string",2],["Imagine::read","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_read","(<abbr title=\"Imagine\\Image\\resource\">resource<\/abbr> $resource)","Loads an image from a resource $resource",2],["Imagine::font","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["Layers::__construct","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method___construct","(<a href=\"Imagine\/Gd\/Image.html\"><abbr title=\"Imagine\\Gd\\Image\">Image<\/abbr><\/a> $image, $resource)","",2],["Layers::merge","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_merge","()","Merge layers into the original objects",2],["Layers::current","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_current","()","{@inheritdoc}",2],["Layers::key","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_key","()","{@inheritdoc}",2],["Layers::next","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_next","()","{@inheritdoc}",2],["Layers::rewind","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_rewind","()","{@inheritdoc}",2],["Layers::valid","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_valid","()","{@inheritdoc}",2],["Layers::count","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_count","()","{@inheritdoc}",2],["Drawer::__construct","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick)","",2],["Drawer::arc","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["Drawer::chord","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but also connects end points with a straight",2],["Drawer::ellipse","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["Drawer::line","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["Drawer::pieSlice","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["Drawer::dot","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["Drawer::polygon","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["Drawer::text","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle)","Annotates image with specified text at a given position",2],["Effects::__construct","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick)","",2],["Effects::gamma","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_gamma","(<abbr title=\"Imagine\\Effects\\float\">float<\/abbr> $correction)","Apply gamma correction",2],["Effects::negative","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_negative","()","Invert the colors of the image",2],["Effects::grayscale","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_grayscale","()","Grayscale the image",2],["Effects::colorize","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_colorize","(<a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Colorize the image",2],["Font::__construct","Imagine\\Gmagick\\Font","Imagine\/Gmagick\/Font.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick, string $file, integer $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","",2],["Font::box","Imagine\\Gmagick\\Font","Imagine\/Gmagick\/Font.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Image::__construct","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick)","Constructs Image with Gmagick and Imagine instances",2],["Image::__destruct","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method___destruct","()","Destroys allocated gmagick resources",2],["Image::copy","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Image::crop","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Image::flipHorizontally","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Image::flipVertically","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_flipVertically","()","Flips current image using vertical axis",2],["Image::strip","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_strip","()","Remove all profiles and comments",2],["Image::paste","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Image::resize","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Resizes current image and returns self",2],["Image::rotate","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Image::save","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_save","(string $path, array $options = array())","Saves the image at a specified path, the target file",2],["Image::show","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Image::get","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["Image::__toString","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method___toString","()","Returns the image content as a PNG binary string",2],["Image::thumbnail","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET)","Generates a thumbnail from a current image Returns",2],["Image::draw","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["Image::effects","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_effects","()","",2],["Image::getSize","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_getSize","()","Returns current image size",2],["Image::applyMask","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Image::mask","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["Image::fill","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Image::histogram","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Color",2],["Image::getColorAt","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["Image::layers","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_layers","()","Returns the image layers when applicable.",2],["Imagine::__construct","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method___construct","()","",2],["Imagine::open","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_open","(string $path)","Opens an existing image from $path",2],["Imagine::create","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["Imagine::load","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_load","(string $string)","Loads an image from a binary $string",2],["Imagine::read","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_read","(<abbr title=\"Imagine\\Image\\resource\">resource<\/abbr> $resource)","Loads an image from a resource $resource",2],["Imagine::font","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["Layers::__construct","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method___construct","(<a href=\"Imagine\/Gmagick\/Image.html\"><abbr title=\"Imagine\\Gmagick\\Image\">Image<\/abbr><\/a> $image, <abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $resource)","",2],["Layers::merge","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_merge","()","Merge layers into the original objects",2],["Layers::current","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_current","()","{@inheritdoc}",2],["Layers::key","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_key","()","{@inheritdoc}",2],["Layers::next","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_next","()","{@inheritdoc}",2],["Layers::rewind","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_rewind","()","{@inheritdoc}",2],["Layers::valid","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_valid","()","{@inheritdoc}",2],["Layers::count","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_count","()","{@inheritdoc}",2],["AbstractFont::__construct","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method___construct","(string $file, integer $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["AbstractFont::getFile","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method_getFile","()","Gets the fontfile for current font",2],["AbstractFont::getSize","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method_getSize","()","Gets font's integer point size",2],["AbstractFont::getColor","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method_getColor","()","Gets font's color",2],["Box::__construct","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method___construct","(integer $width, integer $height)","Constructs the Size with given width and height",2],["Box::getWidth","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_getWidth","()","Gets current image width",2],["Box::getHeight","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_getHeight","()","Gets current image height",2],["Box::scale","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_scale","(<abbr title=\"Imagine\\Image\\float\">float<\/abbr> $ratio)","Creates new BoxInterface instance with ratios applied",2],["Box::increase","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_increase","(integer $size)","Creates new BoxInterface, adding given size to both",2],["Box::contains","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_contains","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start = null)","Checks whether current box can fit given box at a given",2],["Box::square","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_square","()","Gets current box square, useful for getting total number",2],["Box::__toString","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method___toString","()","Returns a string representation of the current box",2],["Box::widen","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_widen","(integer $width)","Resizes box to given width, constraining proportions",2],["Box::heighten","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_heighten","(integer $height)","Resizes box to given height, constraining proportions",2],["BoxInterface::getHeight","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_getHeight","()","Gets current image height",2],["BoxInterface::getWidth","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_getWidth","()","Gets current image width",2],["BoxInterface::scale","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_scale","(<abbr title=\"Imagine\\Image\\float\">float<\/abbr> $ratio)","Creates new BoxInterface instance with ratios applied",2],["BoxInterface::increase","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_increase","(integer $size)","Creates new BoxInterface, adding given size to both",2],["BoxInterface::contains","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_contains","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start = null)","Checks whether current box can fit given box at a given",2],["BoxInterface::square","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_square","()","Gets current box square, useful for getting total number",2],["BoxInterface::__toString","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method___toString","()","Returns a string representation of the current box",2],["BoxInterface::widen","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_widen","(integer $width)","Resizes box to given width, constraining proportions",2],["BoxInterface::heighten","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_heighten","(integer $height)","Resizes box to given height, constraining proportions",2],["Color::__construct","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method___construct","(array|string|integer $color, integer $alpha)","Constructs image color, e.g.:     - new Color('fff')",2],["Color::getRed","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_getRed","()","Returns RED value of the color",2],["Color::getGreen","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_getGreen","()","Returns GREEN value of the color",2],["Color::getBlue","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_getBlue","()","Returns BLUE value of the color",2],["Color::getAlpha","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_getAlpha","()","Returns percentage of transparency of the color",2],["Color::dissolve","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_dissolve","(integer $alpha)","Returns a copy of current color, incrementing the alpha",2],["Color::lighten","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_lighten","(integer $shade)","Returns a copy of the current color, lightened by the",2],["Color::darken","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_darken","(integer $shade)","Returns a copy of the current color, darkened by the",2],["Color::__toString","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method___toString","()","Returns hex representation of the color",2],["Color::isOpaque","Imagine\\Image\\Color","Imagine\/Image\/Color.html#method_isOpaque","()","Checks if the current color is opaque",2],["FillInterface::getColor","Imagine\\Image\\Fill\\FillInterface","Imagine\/Image\/Fill\/FillInterface.html#method_getColor","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","Gets color of the fill for the given position",2],["Horizontal::getDistance","Imagine\\Image\\Fill\\Gradient\\Horizontal","Imagine\/Image\/Fill\/Gradient\/Horizontal.html#method_getDistance","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","{@inheritdoc}",2],["Linear::__construct","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method___construct","(integer $length, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $end)","Constructs a linear gradient with overall gradient",2],["Linear::getColor","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method_getColor","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","Gets color of the fill for the given position",2],["Linear::getStart","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method_getStart","()","",2],["Linear::getEnd","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method_getEnd","()","",2],["Vertical::getDistance","Imagine\\Image\\Fill\\Gradient\\Vertical","Imagine\/Image\/Fill\/Gradient\/Vertical.html#method_getDistance","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","{@inheritdoc}",2],["FontInterface::getFile","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_getFile","()","Gets the fontfile for current font",2],["FontInterface::getSize","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_getSize","()","Gets font's integer point size",2],["FontInterface::getColor","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_getColor","()","Gets font's color",2],["FontInterface::box","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Bucket::__construct","Imagine\\Image\\Histogram\\Bucket","Imagine\/Image\/Histogram\/Bucket.html#method___construct","(<a href=\"Imagine\/Image\/Histogram\/Range.html\"><abbr title=\"Imagine\\Image\\Histogram\\Range\">Range<\/abbr><\/a> $range, integer $count)","",2],["Bucket::add","Imagine\\Image\\Histogram\\Bucket","Imagine\/Image\/Histogram\/Bucket.html#method_add","(integer $value)","",2],["Bucket::count","Imagine\\Image\\Histogram\\Bucket","Imagine\/Image\/Histogram\/Bucket.html#method_count","()","",2],["Range::__construct","Imagine\\Image\\Histogram\\Range","Imagine\/Image\/Histogram\/Range.html#method___construct","(integer $start, integer $end)","",2],["Range::contains","Imagine\\Image\\Histogram\\Range","Imagine\/Image\/Histogram\/Range.html#method_contains","(integer $value)","",2],["ImageInterface::get","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["ImageInterface::__toString","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method___toString","()","Returns the image content as a PNG binary string",2],["ImageInterface::draw","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["ImageInterface::effects","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_effects","()","",2],["ImageInterface::getSize","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_getSize","()","Returns current image size",2],["ImageInterface::mask","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["ImageInterface::histogram","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Color",2],["ImageInterface::getColorAt","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["ImageInterface::layers","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_layers","()","Returns the image layers when applicable.",2],["ImagineInterface::create","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["ImagineInterface::open","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_open","(string $path)","Opens an existing image from $path",2],["ImagineInterface::load","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_load","(string $string)","Loads an image from a binary $string",2],["ImagineInterface::read","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_read","(<abbr title=\"Imagine\\Image\\resource\">resource<\/abbr> $resource)","Loads an image from a resource $resource",2],["ImagineInterface::font","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["LayersInterface::merge","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_merge","()","Merge layers into the original objects",2],["ManipulatorInterface::copy","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_copy","()","Copies current source image into a new ImageInterface",2],["ManipulatorInterface::crop","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["ManipulatorInterface::resize","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Resizes current image and returns self",2],["ManipulatorInterface::rotate","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["ManipulatorInterface::paste","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["ManipulatorInterface::save","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_save","(string $path, array $options = array())","Saves the image at a specified path, the target file",2],["ManipulatorInterface::show","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["ManipulatorInterface::flipHorizontally","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["ManipulatorInterface::flipVertically","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_flipVertically","()","Flips current image using vertical axis",2],["ManipulatorInterface::strip","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_strip","()","Remove all profiles and comments",2],["ManipulatorInterface::thumbnail","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = self::THUMBNAIL_INSET)","Generates a thumbnail from a current image Returns",2],["ManipulatorInterface::applyMask","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["ManipulatorInterface::fill","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Point::__construct","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method___construct","(integer $x, integer $y)","Constructs a point of coordinates",2],["Point::getX","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_getX","()","Gets points x coordinate",2],["Point::getY","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_getY","()","Gets points y coordinate",2],["Point::in","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_in","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Checks if current coordinate is inside a given bo",2],["Point::move","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_move","(integer $amount)","Returns another point, moved by a given amount from",2],["Point::__toString","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method___toString","()","Gets a string representation for the current point",2],["PointInterface::getX","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_getX","()","Gets points x coordinate",2],["PointInterface::getY","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_getY","()","Gets points y coordinate",2],["PointInterface::in","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_in","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Checks if current coordinate is inside a given bo",2],["PointInterface::move","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_move","(integer $amount)","Returns another point, moved by a given amount from",2],["PointInterface::__toString","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method___toString","()","Gets a string representation for the current point",2],["Center::__construct","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method___construct","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Constructs coordinate with size instance, it needs",2],["Center::getX","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_getX","()","Gets points x coordinate",2],["Center::getY","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_getY","()","Gets points y coordinate",2],["Center::in","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_in","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Checks if current coordinate is inside a given bo",2],["Center::move","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_move","(integer $amount)","Returns another point, moved by a given amount from",2],["Center::__toString","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method___toString","()","Gets a string representation for the current point",2],["Drawer::__construct","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick)","",2],["Drawer::arc","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["Drawer::chord","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but also connects end points with a straight",2],["Drawer::ellipse","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["Drawer::line","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["Drawer::pieSlice","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["Drawer::dot","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["Drawer::polygon","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["Drawer::text","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle)","Annotates image with specified text at a given position",2],["Effects::__construct","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick)","",2],["Effects::gamma","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_gamma","(<abbr title=\"Imagine\\Effects\\float\">float<\/abbr> $correction)","Apply gamma correction",2],["Effects::negative","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_negative","()","Invert the colors of the image",2],["Effects::grayscale","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_grayscale","()","Grayscale the image",2],["Effects::colorize","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_colorize","(<a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Colorize the image",2],["Font::__construct","Imagine\\Imagick\\Font","Imagine\/Imagick\/Font.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick, string $file, integer $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","",2],["Font::box","Imagine\\Imagick\\Font","Imagine\/Imagick\/Font.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Image::__construct","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick)","Constructs Image with Imagick and Imagine instances",2],["Image::__destruct","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method___destruct","()","Destroys allocated imagick resources",2],["Image::copy","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Image::crop","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Image::flipHorizontally","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Image::flipVertically","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_flipVertically","()","Flips current image using vertical axis",2],["Image::strip","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_strip","()","Remove all profiles and comments",2],["Image::paste","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Image::resize","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Resizes current image and returns self",2],["Image::rotate","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Image::save","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_save","(string $path, array $options = array())","Saves the image at a specified path, the target file",2],["Image::show","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Image::get","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["Image::__toString","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method___toString","()","Returns the image content as a PNG binary string",2],["Image::thumbnail","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET)","Generates a thumbnail from a current image Returns",2],["Image::draw","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["Image::effects","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_effects","()","",2],["Image::getSize","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_getSize","()","Returns current image size",2],["Image::applyMask","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Image::mask","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["Image::fill","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Image::histogram","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Color",2],["Image::getColorAt","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["Image::layers","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_layers","()","Returns the image layers when applicable.",2],["Imagine::__construct","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method___construct","()","",2],["Imagine::open","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_open","(string $path)","Opens an existing image from $path",2],["Imagine::create","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["Imagine::load","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_load","(string $string)","Loads an image from a binary $string",2],["Imagine::read","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_read","(<abbr title=\"Imagine\\Image\\resource\">resource<\/abbr> $resource)","Loads an image from a resource $resource",2],["Imagine::font","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Color.html\"><abbr title=\"Imagine\\Image\\Color\">Color<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["Layers::__construct","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method___construct","(<a href=\"Imagine\/Imagick\/Image.html\"><abbr title=\"Imagine\\Imagick\\Image\">Image<\/abbr><\/a> $image, <abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $resource)","",2],["Layers::merge","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_merge","()","Merge layers into the original objects",2],["Layers::current","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_current","()","{@inheritdoc}",2],["Layers::key","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_key","()","{@inheritdoc}",2],["Layers::next","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_next","()","{@inheritdoc}",2],["Layers::rewind","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_rewind","()","{@inheritdoc}",2],["Layers::valid","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_valid","()","{@inheritdoc}",2],["Layers::count","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_count","()","{@inheritdoc}",2],["IsImageEqual::__construct","Imagine\\Test\\Constraint\\IsImageEqual","Imagine\/Test\/Constraint\/IsImageEqual.html#method___construct","(<abbr title=\"Imagine\\Test\\Constraint\\Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr> $value, <abbr title=\"Imagine\\Test\\Constraint\\float\">float<\/abbr> $delta = 0.1, integer $buckets = 4)","",2],["IsImageEqual::evaluate","Imagine\\Test\\Constraint\\IsImageEqual","Imagine\/Test\/Constraint\/IsImageEqual.html#method_evaluate","($other)","{@inheritdoc}",2],["IsImageEqual::toString","Imagine\\Test\\Constraint\\IsImageEqual","Imagine\/Test\/Constraint\/IsImageEqual.html#method_toString","()","{@inheritdoc}",2],["ImagineTestCase::assertImageEquals","Imagine\\Test\\ImagineTestCase","Imagine\/Test\/ImagineTestCase.html#method_assertImageEquals","(<abbr title=\"Imagine\\Test\\Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr> $expected, <abbr title=\"Imagine\\Test\\Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr> $actual, string $message = &#039;&#039;, <abbr title=\"Imagine\\Test\\float\">float<\/abbr> $delta = 0.1, integer $buckets = 4)","Asserts that two images are equal using color histogram",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']